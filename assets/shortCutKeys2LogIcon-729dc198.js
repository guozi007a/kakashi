let c;const i=new Uint8Array(16);function y(){if(!c&&(c=typeof crypto<"u"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!c))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return c(i)}const e=[];for(let n=0;n<256;++n)e.push((n+256).toString(16).slice(1));function p(n,t=0){return(e[n[t+0]]+e[n[t+1]]+e[n[t+2]]+e[n[t+3]]+"-"+e[n[t+4]]+e[n[t+5]]+"-"+e[n[t+6]]+e[n[t+7]]+"-"+e[n[t+8]]+e[n[t+9]]+"-"+e[n[t+10]]+e[n[t+11]]+e[n[t+12]]+e[n[t+13]]+e[n[t+14]]+e[n[t+15]]).toLowerCase()}const g=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto),d={randomUUID:g};function s(n,t,u){if(d.randomUUID&&!t&&!n)return d.randomUUID();n=n||{};const r=n.random||(n.rng||y)();if(r[6]=r[6]&15|64,r[8]=r[8]&63|128,t){u=u||0;for(let o=0;o<16;++o)t[u+o]=r[o];return t}return p(r)}const m={"#cg":"🛠","#yh":"💄","#xz":"🆕","#fq":"🗑","#xf":"🐞"},U=n=>{if(!n)return"";for(const[t,u]of Object.entries(m))if(n.startsWith(t))return n.replace(t,u);return n};export{U as s,s as v};
